@namespace("org.ga4gh")
protocol ReferenceAlignmentTypes {
    // The schemas here describe alignment structures to represent alignments between sequence graphs.
    
    import idl "referenceStructure.avdl";
    
    // Defines an alignment between the subintervals of two blocks.
    record GA4GHAlignmentBlock {
        // The ID of the first aligned position in the first sequence graph.
        long seq1StartPosition;
        
        // The ID of the first aligned position in the second sequence graph.
        long seq2StartPosition;
        
        // How many positions do we run for. 
        // The ID of the last aligned position in the first sequence graph is seq1StartPosition + length - 1.
        // Similarly, the ID of the last aligned position in the second sequence graph is seq2StartPosition + length - 1.
        int length;
        
        //Positions can be mapped to one another on either strand, it is therefore necessary
        //to specify the strand of the mapping. A forward mapping is True, a reverse mapping is Negative.
        //For all 0 <= i <= length, if the mapping is forward then the position seq1StartPosition + i 
        //in the first sequence graph is aligned to the position seq2StartPosition + i in the second 
        //sequence graph, else if the mapping is reversed then the position seq1StartPosition + i 
        //in the first sequence graph is aligned to the position seq2StartPosition + length - 1 + i 
        //in the second sequence graph.
        bool strand;
    }
    
    // Generalizations, which are used to describe how the
    // bases in one reference structure can be merged to produce another
    // reference structure at a higher level in a reference hierarchy. Each
    // Generalization says that each base in a certain contiguous block of bases
    // on the lower level (starting at the specified Position and continuing
    // from left to right for the specified length) is merged into the
    // corresponding base on the higher level.
    record GA4GHGeneralization {
        //The alignment block representing the generalization.
        //The first sequence graph represents the generalisation of the second sequence graph.
        GA4GHAlignmentBlock alignmentBlock;
        
        //FURTHER PARAMETERS?? 
    }
    
    record GA4GHAlignment {
        //An array of alignment blocks.
        //Should these be ordered or are they just a set?????
        array < GA4GHAlignmentBlock > alignment = [];
    }
    
    record GA4GHDirectedBlock {
        //Unoriented block
        GA4GHBlock block;
        
        //The orientation of the edge. 
        //If True the edge is oriented from the left-to-right sides (i.e. the left side of first position to the 
        //right side of the last position), if False the edge is oriented from the right-to-left sides.
        bool orientation
    }
    
    record GA4GHThread {
        //Defines a path within a sequence graph that represents a sequence.
        
        //A sequence of directed blocks. 
        //Consecutive sides of two directed blocks must be connected by an adjacency edge.
        array < GA4GHDirectedBlock > path = [];
        
        //The zero-based offset of the first position in the thread in the first directed block edge of the thread.
        //For example, if startOffset = 0 the first and subsequent positions are included in the thread.
        int startOffset;
        
        //The zero-based offset of the last position in the thread in the last directed block edge of the thread.
        //For example, if endOffset = length-1 the last and previous positions are included in the thread.
        int endOffset;
    }
    
    record GACIGARUnit {
        int operation; // can be replaced with enum; ///BENEDICT - I think this should be an enum.
        int operationLength;
        union {null, string} contigSequence = null; // the contig seq at mismatches (X) and dels (D)
    }
    
    record GA4GHCigarAlignment {
        //The aligned thread from the first sequence graph.
        GA4GHThread thread1;
        
        //The aligned thread from the second sequence graph.
        GA4GHThread thread2;
        
        //The cigar string aligning the first thread to the second thread.
        array<GACIGARUnit> cigar = []; 
    }
}
